#########################################################################
# Title:         Cloudbox: rtorrent Role                                #
# Author(s):     l3uddz                                                 #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################

  - name: Settings  Install 'dnsutils'
    apt: "name=dnsutils state=present"

  - name: Settings  Get Public IP Address
    shell: dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F'\"' '{ print $2}'
    register: public_ip_lookup

  - name: Settings  Set 'public_ip' variable
    set_fact:
      public_ip: "{{ public_ip_lookup.stdout }}"

  - name: Settings  Set 'network.local_address.set'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^network\.local_address\.set\s*=.*'
      line: 'network.local_address.set = {{ public_ip }}'
      state: present

  - name: Settings  Add comment for 'network.local_address.set'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      insertbefore: '^network\.local_address\.set\s*=.*'
      line: "# The ip address reported to the tracker"
      state: present

  - name: Settings  Add line space
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      insertbefore: '# The ip address reported to the tracker'
      line: ""
      state: present

  - name: Settings  Set 'execute'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^execute\s=.*'
      line: 'execute = {sh,-c,/usr/bin/php7 /app/rutorrent/php/initplugins.php abc &}'
      state: present

  - name: Set download location || /mnt/incomplete/rutorrent
    lineinfile:
      path: '/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc'
      regexp: '#*directory.default.set\s*=.*'
      line: 'directory.default.set = /mnt/incomplete/rutorrent'
      state: present

  - name: Set download completed move location to /mnt/downloads/torrent
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*method.insert\s*=\s*d.get_finished_dir.*'
      line: 'method.insert = d.get_finished_dir, simple, "cat=/mnt/downloads/rutorrent/,$d.custom1="'
      state: present

  - name: Set download data path location
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*method.insert\s*=\s*d.data_path.*'
      line: 'method.insert = d.data_path, simple, "if=(d.is_multi_file), (cat,(d.directory),/), (cat,(d.directory),/,(d.name))"'
      state: present

  - name: Enable download completed move to /mnt/downloads/torrent
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*method.insert\s*=\s*d.move_to_complete,\s*simple.*'
      line: 'method.insert = d.move_to_complete, simple, "d.directory.set=$argument.1=; execute=mkdir,-p,$argument.1=; execute=mv,-u,$argument.0=,$argument.1=; d.save_full_session="'
      state: present

  - name: Enable download completed move event to /mnt/downloads/torrent
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*method.set_key\s*=\s*event.download.finished,move_complete.*'
      line: 'method.set_key = event.download.finished,move_complete,"d.move_to_complete=$d.data_path=,$d.get_finished_dir="'
      state: present

  - name: Set download location || /mnt/downloads/incomplete
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*directory\s*=.*'
      line: 'directory = /mnt/incomplete/rutorrent'
      state: present

  - name: Set download location default set
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*directory.default.set\s*=.*'
      line: 'directory.default.set = /mnt/incomplete/rutorrent'
      state: present

  # Disable DHT - i.e.  disables trackerless torrents.
  - name: Settings  Disable DHT
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*dht\s*=.*'
      line: 'dht.mode.set = disable'
      state: present

  # Disable DHT - i.e.  disables trackerless torrents.
  - name: Settings  Disable DHT
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*dht\s*=.*'
      line: '# dht = auto'
      state: present

  - name: DHT port
    lineinfile:
      path: '/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc'
      regexp: '#*dht_port\s*=.*'
      line: '# dht_port = 6881'
      state: present

  - name: check Hash
    lineinfile:
      path: '/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc'
      regexp: '#*check_hash\s*=.*'
      line: 'check_hash = no'
      state: present

  - name: Set lower disk space to 1500M
    lineinfile:
      path: '/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc'
      regexp: '#*schedule = low_diskspace,5,60,close_low_diskspace=100M\s*=.*'
      line: 'schedule = low_diskspace,5,60,close_low_diskspace=1500M'
      state: present

  # Disable Peer exchange (PEX) - i.e. allows torrents marked private, only.
  - name: Settings  Disable PEX
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^protocol\.pex\.set\s*=.*'
      line: 'protocol.pex.set = no'
      state: present

  # Minimum number of peers to connect to per torrent
  - name: Settings  Reduce 'min_peers'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^throttle\.min_peers\.normal\.set\s*=.*'
      line: 'throttle.min_peers.normal.set = 1'
      state: present

  # Maximum number of simultaneous upload slots per torrent.
  - name: Settings  Increase 'max_uploads'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^throttle\.max_uploads\.set\s*=.*'
      line: 'throttle.max_uploads.set = 1024'
      state: present

  # Maximum number of simultaneous downloads slots globally
  - name: Settings  Set 'max_downloads_global' to 1024
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^throttle\.max_downloads\.global\.set\s*=.*'
      line: 'throttle.max_downloads.global.set = 1024'
      state: present

# Maximum number of simultaneous downloads and uploads slots globally
  - name: Settings  Set 'max_uploads_global' to 1024
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^throttle\.max_uploads\.global\.set\s*=.*'
      line: 'throttle.max_uploads.global.set = 1024'
      state: present

# Global download rate in KiB
  - name: Settings  Set 'global_download_rate' to 54000
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^throttle\.global_down\.max_rate\.set_kb\s*=.*'
      line: 'throttle.global_down.max_rate.set_kb = 54000'
      state: present

# Global upload rate in KiB
  - name: Settings  Set 'global_upload_rate' to 54000
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^throttle\.global_up\.max_rate\.set_kb\s*=.*'
      line: 'throttle.global_up.max_rate.set_kb = 54000'
      state: present


# Maximum number of open files rtorrent can keep open.
  - name: Settings  Set 'max_open_files' to 1024
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^network\.max_open_files\.set\s*=.*'
      line: 'network.max_open_files.set = 1024'
      state: present

  - name: Settings  Set encryption parameters
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^protocol\.encryption\.set\s*=.*'
      line: 'protocol.encryption.set = allow_incoming,try_outgoing,enable_retry,prefer_plaintext'
      state: present

  - name: Settings  Disable - Hash check
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^pieces\.hash\.on_completion\.set\s*=.*'
      line: 'pieces.hash.on_completion.set = no'
      state: present

# Allocate disk space
  - name: Settings  Disable 'file_allocate'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^system\.file\.allocate\.set\s*=.*'
      line: 'system.file.allocate.set = 0'
      state: present

  - name: Settings  Set watched directory
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^.*#.*schedule.*=.*watch_directory.*'
      line: 'schedule = watch_directory,5,5,"load.start=/downloads/torrents/watched/*.torrent,d.delete_tied="'
      state: present

  - name: Settings  Set 'network.xmlrpc.size_limit.set' to 20M
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^network\.xmlrpc\.size_limit\.set\s*=.*'
      line: 'network.xmlrpc.size_limit.set = 20M'
      state: present

  - name: Settings  Add line space
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      insertbefore: 'network.xmlrpc.size_limit.set = 20M'
      line: ""
      state: present

  - name: Preload Piece to Host
    lineinfile:
      path: '/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc'
      regexp: '#*pieces.preload.type\s*=.*'
      line: 'pieces.preload.type = 2'
      state: present

## php-local.ini

  - name: Settings  Set 'upload_max_filesize' to 20M
    lineinfile:
      path: '/opt/appdata/{{pgrole}}/php/php-local.ini'
      regexp: '^upload_max_filesize\s*=.*'
      line: 'upload_max_filesize = 20M'
      state: present

## plugins.ini

  - name: Settings  Import custom 'plugins.ini'
    copy:
      src: '/opt/coreapps/apps/templates/rutorrent/rutorrent/settings/plugins.ini'
      dest: '/opt/appdata/{{pgrole}}/rutorrent/settings/plugins.ini'
      mode: 0775
      force: yes

## rtorrent.rc

  - name: Settings  Install 'dnsutils'
    apt: "name=dnsutils state=present"

  - name: Settings  Get Public IP Address
    shell: dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F'\"' '{ print $2}'
    register: public_ip_lookup

  - name: Settings  Set 'public_ip' variable
    set_fact:
      public_ip: "{{ public_ip_lookup.stdout }}"

  - name: Settings  Set 'network.local_address.set'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^network\.local_address\.set\s*=.*'
      line: 'network.local_address.set = {{ public_ip }}'
      state: present

  - name: Settings  Add comment for 'network.local_address.set'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      insertbefore: '^network\.local_address\.set\s*=.*'
      line: "# The ip address reported to the tracker"
      state: present

  - name: Settings  Add line space
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      insertbefore: '# The ip address reported to the tracker'
      line: ""
      state: present

  - name: Settings  Set 'execute'
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '^execute\s=.*'
      line: 'execute = {sh,-c,/usr/bin/php7 /app/rutorrent/php/initplugins.php abc &}'
      state: present

  - name: Set download completed move location
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*method.insert\s*=\s*d.get_finished_dir.*'
      line: 'method.insert = d.get_finished_dir, simple, "cat=/mnt/downloads/rutorrent/,$d.custom1="'
      state: present

  - name: Set download data path location
    lineinfile:
      path: "/opt/appdata/{{pgrole}}/rtorrent/rtorrent.rc"
      regexp: '#*method.insert\s*=\s*d.data_path.*'
      line: 'method.insert = d.data_path, simple, "if=(d.is_multi_file), (cat,(d.directory),/), (cat,(d.directory),/,(d.name))"'
      state: present
