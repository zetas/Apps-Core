#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'jackett'
        intport: '9117'
        extport: '9117'
        image: 'linuxserver/jackett'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/coreapps/apps/_core.yml'

    # MIGRATIONS (MANDATORY) ############################################################
    - name: Checking for old app data
      stat:
        path: '/opt/appdata/{{pgrole}}/Jackett/ServerConfig.json'
      register: olddatacheck

    - name: Migrating appdata
      shell: 'mv /opt/appdata/{{pgrole}}/Jackett/* /opt/appdata/{{pgrole}}'
      ignore_errors: yes
      when: olddatacheck.stat.exists

    - name: Migrating appdata
      shell: 'rmdir /opt/appdata/{{pgrole}}/Jackett'
      ignore_errors: yes
      when: olddatacheck.stat.exists

    - name: Checking for existing app data
      stat:
        path: '/opt/appdata/{{pgrole}}/ServerConfig.json'
      register: datacheck

    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}}{{tldset}}{{cname}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    - name: 'Setting {{pgrole}} Volumes'
      set_fact:
        pg_volumes:
          - '{{path.stdout}}:{{path.stdout}}'
          - '/opt/appdata/{{pgrole}}:/config/Jackett'

    - name: 'Setting {{pgrole}} ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'

    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'

    # CONFIGURATION ####################################################
    - name: 'Waiting for {{pgrole}} to initialize'
      wait_for:
        path: '/opt/appdata/{{pgrole}}/ServerConfig.json'
        state: present
        msg: ServerConfig.json creation failed

    - name: 'Stopping {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        state: stopped

    # FIRST TIME CONFIGURATION ####################################################
    - name: 'Configuring {{pgrole}} for first time use'
      block:
        - name: Set torrent blackhole location
          lineinfile:
            path: '/opt/appdata/{{pgrole}}/ServerConfig.json'
            regexp: '\s*"BlackholeDir"\s*:.*'
            line: '  "BlackholeDir": "{{path.stdout}}/torrent/watch",'
            state: present
      when: not datacheck.stat.exists

    - name: Restart {{pgrole}}
      docker_container:
        name: '{{pgrole}}'
        state: started
